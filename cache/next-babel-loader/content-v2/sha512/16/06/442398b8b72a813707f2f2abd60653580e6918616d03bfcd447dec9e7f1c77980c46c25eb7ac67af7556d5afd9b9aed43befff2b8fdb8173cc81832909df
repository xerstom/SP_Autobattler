{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport BackGameInterface from \"../core/BackGameInterface.js\"; // phase 1 => waiting for position\n// phase 2 => waiting for next turn\n\nvar FrontGameInterface = /*#__PURE__*/function () {\n  function FrontGameInterface() {\n    _classCallCheck(this, FrontGameInterface);\n\n    this._backGameInterface = new BackGameInterface();\n    this.currentPhase = 2; // waiting for next turn\n\n    this.agentsPosition = [];\n    this.updatedAgentsPosition = [];\n  }\n\n  _createClass(FrontGameInterface, [{\n    key: \"start\",\n    // gameloop\n    value: function start() {\n      this.bgi.start();\n      this.agentsPosition = this.bgi.getAgentsPosition();\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var selectedBox = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (this.currentPhase === 1 && !selectedBox) {\n        // phase = 1 => waiting for position => need selected position\n        return -1;\n      }\n\n      this.agentsPosition = this.bgi.getAgentsPosition();\n      var phase = this.bgi.next(selectedBox);\n      this.currentPhase = phase;\n      return phase;\n    } // position\n\n  }, {\n    key: \"getPriorAgentsPosition\",\n    value: function getPriorAgentsPosition() {\n      this.updatedAgentsPosition = this.bgi.getPriorAgentsPosition();\n      return this.updatedAgentsPosition.length;\n    }\n  }, {\n    key: \"getLaterAgentsPosition\",\n    value: function getLaterAgentsPosition() {\n      this.updatedAgentsPosition = this.bgi.getLaterAgentsPosition();\n      return this.updatedAgentsPosition.length;\n    }\n  }, {\n    key: \"getAgentsPosition\",\n    value: function getAgentsPosition() {\n      return _toConsumableArray(this.agentsPosition);\n    }\n  }, {\n    key: \"getUpdatedAgentsPosition\",\n    value: function getUpdatedAgentsPosition() {\n      if (this.updatedAgentsPosition.length > 0) {\n        var uAgent = this.updatedAgentsPosition.shift();\n        var index = this.agentsPosition.findIndex(function (a) {\n          return a.name === uAgent.name;\n        });\n        this.agentsPosition.splice(index, 1, uAgent);\n      } // return le cache\n\n\n      return this.getAgentsPosition();\n    } // PROFILE\n\n  }, {\n    key: \"getAgentsProfile\",\n    value: function getAgentsProfile() {\n      return _toConsumableArray(this.bgi.getAgents());\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(agent) {\n      return _objectSpread({}, this.bgi.getAgent(agent));\n    }\n  }, {\n    key: \"getBoard\",\n    value: function getBoard(agent) {\n      return _toConsumableArray(this.bgi.getBoard(agent).board);\n    }\n  }, {\n    key: \"getBench\",\n    value: function getBench(agent) {\n      return _toConsumableArray(this.bgi.getBoard(agent).bench);\n    }\n  }, {\n    key: \"getMarketCard\",\n    value: function getMarketCard() {\n      return _objectSpread({}, this.bgi.getMarketCard());\n    } // PLAYER INTERACTIONS\n\n  }, {\n    key: \"boardUp\",\n    value: function boardUp() {\n      return this.bgi.boardUp();\n    }\n  }, {\n    key: \"levelUp\",\n    value: function levelUp() {\n      return this.bgi.levelUp();\n    }\n  }, {\n    key: \"buyCard\",\n    value: function buyCard() {\n      return this.bgi.buyCard();\n    }\n  }, {\n    key: \"sellCard\",\n    value: function sellCard(index, location) {\n      return this.bgi.sellCard(index, location);\n    }\n  }, {\n    key: \"swapCard\",\n    value: function swapCard(index, location) {\n      return this.bgi.swapCard(index, location);\n    }\n  }, {\n    key: \"rerollCard\",\n    value: function rerollCard() {\n      return this.bgi.rerollCard();\n    } // MAP\n\n  }, {\n    key: \"getGridSize\",\n    value: function getGridSize() {\n      return this.bgi.getGridSize();\n    }\n  }, {\n    key: \"isSelectable\",\n    value: function isSelectable(x, y) {\n      return this.bgi.canPlayerMove(x, y) && !this.isDisabled(x, y) && !this.willBeDisabled(x, y);\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled(x, y) {\n      return this.bgi.isDisabled(x, y);\n    }\n  }, {\n    key: \"willBeDisabled\",\n    value: function willBeDisabled(x, y) {\n      return this.bgi.willBeDisabled(x, y);\n    } // battle\n\n  }, {\n    key: \"getBattleSummary\",\n    value: function getBattleSummary() {\n      return this.bgi.getBattleSummary().map(function (e) {\n        return e.summary;\n      });\n    }\n  }, {\n    key: \"getLastCombat\",\n    value: function getLastCombat(agent) {\n      var sum = this.bgi.getBattleSummary();\n      var filtered = sum.filter(function (e) {\n        return e.agent1 === agent || e.agent2 === agent;\n      });\n      return filtered.length > 0 ? filtered.pop() : null;\n    }\n  }, {\n    key: \"bgi\",\n    get: function get() {\n      return this._backGameInterface;\n    }\n  }]);\n\n  return FrontGameInterface;\n}();\n\nexport default FrontGameInterface;","map":null,"metadata":{},"sourceType":"module"}