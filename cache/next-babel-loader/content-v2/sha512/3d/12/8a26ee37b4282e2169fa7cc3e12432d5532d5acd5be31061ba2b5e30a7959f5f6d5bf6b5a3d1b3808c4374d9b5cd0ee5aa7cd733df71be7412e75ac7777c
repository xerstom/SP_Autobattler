{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar ManagementStrategy = /*#__PURE__*/function () {\n  function ManagementStrategy() {\n    _classCallCheck(this, ManagementStrategy);\n  }\n\n  _createClass(ManagementStrategy, null, [{\n    key: \"executeTurn\",\n    // eslint-disable-next-line no-unused-vars\n    value: function executeTurn(strategy, agent, Manager) {\n      throw new Error(\"not implemented\");\n    }\n  }, {\n    key: \"_executeTurn\",\n    value: function _executeTurn(managementStrat, strategy, agent, agentManager, cardManager) {\n      managementStrat.executeTurn(strategy, agent, agentManager, cardManager);\n\n      var _cardManager$optimize = cardManager.optimizeBoards(agent.board, agent.bench, agent.boardSize),\n          _cardManager$optimize2 = _slicedToArray(_cardManager$optimize, 2),\n          board = _cardManager$optimize2[0],\n          bench = _cardManager$optimize2[1];\n\n      agent.setNewGamingBoard(board, bench);\n    }\n  }, {\n    key: \"redistributeProba\",\n    value: function redistributeProba(probaToChange, strategy) {\n      var toDistribute = strategy[probaToChange];\n      strategy[probaToChange] = -1;\n      var whereToDistribute = [\"buyProbability\"];\n\n      if (probaToChange === \"boardUpProbability\" && strategy.levelUpProbability !== -1) {\n        whereToDistribute.push(\"levelUpProbability\");\n      } else if (strategy.boardUpProbability !== -1) {\n        whereToDistribute.push(\"boardUpProbability\");\n      }\n\n      var i = 0;\n\n      while (toDistribute !== 0 && i === whereToDistribute.length) {\n        var r = Math.random() * toDistribute;\n        toDistribute -= r;\n        strategy[whereToDistribute[i++]] += r;\n      }\n\n      strategy[whereToDistribute[i]] += toDistribute;\n    }\n  }]);\n\n  return ManagementStrategy;\n}();\n\nexport { ManagementStrategy as default };","map":null,"metadata":{},"sourceType":"module"}