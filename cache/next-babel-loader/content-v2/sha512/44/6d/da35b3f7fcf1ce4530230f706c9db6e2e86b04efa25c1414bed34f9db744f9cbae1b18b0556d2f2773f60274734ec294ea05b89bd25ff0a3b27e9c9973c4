{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* eslint-disable no-magic-numbers */\nimport { Box, Button, Flex } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport LogOutput from \"../LogOutput.jsx\";\nimport AgentDisplayer from \"./AgentDisplayer/AgentDisplayer.jsx\";\nimport Grid from \"./Grid/Grid.jsx\";\nvar TIMEOUT_MOVEMENT = 1000;\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n\nvar GamingMap = function GamingMap(props) {\n  var gInterface = props.gInterface,\n      onClickHandler = props.onClickHandler;\n\n  var _useState = useState(null),\n      selectedBox = _useState[0],\n      setSelectedBox = _useState[1];\n\n  var _useState2 = useState(false),\n      isNextButtonDisabled = _useState2[0],\n      setNextButtonDisabled = _useState2[1];\n\n  var _useState3 = useState(gInterface.getAgentsPosition()),\n      agentsPosition = _useState3[0],\n      setAgentsPosition = _useState3[1];\n\n  var _useState4 = useState(gInterface.getAgentsProfile()),\n      agents = _useState4[0],\n      setAgents = _useState4[1];\n\n  var _useState5 = useState(gInterface.getBattleSummary()),\n      battleSummary = _useState5[0],\n      setBattleSummary = _useState5[1]; // movePriorPlayers\n\n\n  function phaseOne() {\n    return _phaseOne.apply(this, arguments);\n  } // moveLaterPlayers\n  // Fights\n  // Managements\n\n\n  function _phaseOne() {\n    _phaseOne = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var l, i;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              l = gInterface.getPriorAgentsPosition();\n              i = 0;\n\n            case 2:\n              if (!(i < l)) {\n                _context2.next = 9;\n                break;\n              }\n\n              setAgentsPosition(gInterface.getUpdatedAgentsPosition());\n              _context2.next = 6;\n              return sleep(TIMEOUT_MOVEMENT);\n\n            case 6:\n              ++i;\n              _context2.next = 2;\n              break;\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _phaseOne.apply(this, arguments);\n  }\n\n  function phaseTwo() {\n    return _phaseTwo.apply(this, arguments);\n  }\n  /**\n   * Main frontend gameloop logic\n   */\n\n\n  function _phaseTwo() {\n    _phaseTwo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var l, i, summary, _iterator, _step, sum;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              l = gInterface.getLaterAgentsPosition();\n              i = 0;\n\n            case 2:\n              if (!(i < l)) {\n                _context3.next = 9;\n                break;\n              }\n\n              setAgentsPosition(gInterface.getUpdatedAgentsPosition());\n              _context3.next = 6;\n              return sleep(TIMEOUT_MOVEMENT);\n\n            case 6:\n              ++i;\n              _context3.next = 2;\n              break;\n\n            case 9:\n              setBattleSummary([]);\n              summary = gInterface.getBattleSummary();\n              _iterator = _createForOfIteratorHelper(summary);\n              _context3.prev = 12;\n\n              _iterator.s();\n\n            case 14:\n              if ((_step = _iterator.n()).done) {\n                _context3.next = 22;\n                break;\n              }\n\n              sum = _step.value;\n              battleSummary.push(sum);\n              setBattleSummary(_toConsumableArray(battleSummary));\n              _context3.next = 20;\n              return sleep(400);\n\n            case 20:\n              _context3.next = 14;\n              break;\n\n            case 22:\n              _context3.next = 27;\n              break;\n\n            case 24:\n              _context3.prev = 24;\n              _context3.t0 = _context3[\"catch\"](12);\n\n              _iterator.e(_context3.t0);\n\n            case 27:\n              _context3.prev = 27;\n\n              _iterator.f();\n\n              return _context3.finish(27);\n\n            case 30:\n              setAgents(gInterface.getAgentsProfile());\n\n            case 31:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[12, 24, 27, 30]]);\n    }));\n    return _phaseTwo.apply(this, arguments);\n  }\n\n  var handleNext = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var phase;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              phase = gInterface.next(selectedBox); // If selectedBox not valid, phase = -1\n\n              if (!(phase === -1)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setNextButtonDisabled(true);\n\n              if (!(phase === 1)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return phaseOne();\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              if (!(phase === 2)) {\n                _context.next = 13;\n                break;\n              }\n\n              // waiting for next turn\n              setSelectedBox(null);\n              _context.next = 13;\n              return phaseTwo();\n\n            case 13:\n              setNextButtonDisabled(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNext() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var selectable = function selectable(x, y) {\n    if (!gInterface.isSelectable(x, y)) {\n      return false;\n    }\n\n    setSelectedBox({\n      x: x,\n      y: y\n    });\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxs(Flex, {\n    h: \"100vh\",\n    bg: \"gray.200\",\n    children: [/*#__PURE__*/_jsx(Grid, {\n      gInterface: gInterface,\n      columns: gInterface.getGridSize(),\n      rows: gInterface.getGridSize(),\n      agents: agentsPosition,\n      selectable: selectable,\n      selectedBox: selectedBox\n    }), /*#__PURE__*/_jsxs(Flex, {\n      h: \"70vh\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      w: \"100%\",\n      children: [/*#__PURE__*/_jsxs(Flex, {\n        h: \"100%\",\n        alignItems: \"flex-start\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsx(AgentDisplayer, {\n          agents: agents\n        }), /*#__PURE__*/_jsxs(Flex, {\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          alignItems: \"flex-end\",\n          h: \"100%\",\n          children: [/*#__PURE__*/_jsxs(Button, {\n            w: \"10%\",\n            disabled: isNextButtonDisabled,\n            onClick: onClickHandler,\n            children: [\">>\", \" \"]\n          }), /*#__PURE__*/_jsx(Box, {\n            w: \"7vw\",\n            children: /*#__PURE__*/_jsx(Button, {\n              w: \"100%\",\n              disabled: isNextButtonDisabled,\n              onClick: handleNext,\n              fontSize: \"0.7vw\",\n              children: \"Suivant\"\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(LogOutput, {\n        minH: \"30vh\",\n        summary: battleSummary\n      })]\n    })]\n  });\n};\n\nexport default GamingMap;","map":null,"metadata":{},"sourceType":"module"}