{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable no-magic-numbers */\nimport { Button, Flex, Grid, GridItem } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport LogOutput from \"../LogOutput.jsx\";\nimport Bench from \"./Bench/Bench.jsx\";\nimport Board from \"./Board/Board.jsx\";\nimport Management from \"./Management/Management.jsx\";\nimport Market from \"./Market/Market.jsx\";\nimport Profile from \"./Profile/Profile.jsx\";\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst GamingBoard = props => {\n  const {\n    gInterface\n  } = props;\n  const {\n    0: playerBoard,\n    1: setPlayerBoard\n  } = useState(gInterface.getBoard());\n  const {\n    0: playerBench,\n    1: setPlayerBench\n  } = useState(gInterface.getBench());\n  const {\n    0: playerProfile,\n    1: setPlayerProfile\n  } = useState(gInterface.getProfile());\n  const {\n    0: marketCard,\n    1: setMarketCard\n  } = useState(gInterface.getMarketCard());\n  const {\n    0: combatSummary\n  } = useState(gInterface.getLastCombat(playerProfile.name));\n  const {\n    0: detailedCombats,\n    1: setDetailedCombats\n  } = useState([]);\n  useEffect(async () => {\n    const allSum = gInterface.getLastCombat(playerProfile.name);\n\n    if (!allSum) {\n      return;\n    }\n\n    const combatSum = allSum.detailedCombat;\n\n    for (const combat of combatSum) {\n      detailedCombats.push(combat);\n      setDetailedCombats([...detailedCombats]);\n      await sleep(300);\n    }\n  }, []);\n\n  const sellCard = (index, location) => {\n    gInterface.sellCard(index, location);\n\n    if (location === \"bench\") {\n      setPlayerBench(gInterface.getBench());\n    } else {\n      setPlayerBoard(gInterface.getBoard());\n    }\n\n    setPlayerProfile(gInterface.getProfile());\n  };\n\n  const swapCard = (index, location) => {\n    if (gInterface.swapCard(index, location)) {\n      setPlayerBench(gInterface.getBench());\n      setPlayerBoard(gInterface.getBoard());\n    }\n  };\n\n  const rerollNewCard = () => {\n    setPlayerProfile(gInterface.getProfile());\n    setMarketCard(gInterface.getMarketCard());\n  };\n\n  const reroll = () => {\n    if (gInterface.rerollCard()) {\n      rerollNewCard();\n    }\n  };\n\n  const buy = () => {\n    const res = gInterface.buyCard();\n\n    if (!res[0]) {\n      return false;\n    }\n\n    if (res[1] === \"board\") {\n      setPlayerBoard(gInterface.getBoard());\n    } else if (res[1] === \"bench\") {\n      setPlayerBench(gInterface.getBench());\n    }\n\n    setPlayerProfile(gInterface.getProfile());\n    rerollNewCard();\n    return true;\n  };\n\n  const levelUp = () => {\n    if (gInterface.levelUp()) {\n      setPlayerProfile(gInterface.getProfile());\n    }\n  };\n\n  const boardUp = () => {\n    if (gInterface.boardUp()) {\n      setPlayerProfile(gInterface.getProfile());\n    }\n  };\n\n  const handleKeyPress = e => {\n    switch (e.code) {\n      case \"KeyR\":\n        {\n          rerollNewCard();\n          break;\n        }\n\n      case \"KeyB\":\n        {\n          buy();\n          break;\n        }\n\n      case \"KeyS\":\n        {\n          boardUp();\n          break;\n        }\n\n      case \"KeyL\":\n        {\n          levelUp();\n          break;\n        }\n    }\n  };\n\n  const onCombat = combatSummary !== null;\n  const agentCombat = combatSummary !== null && (combatSummary.agent1 === playerProfile.name ? combatSummary.agent2 : combatSummary.agent1);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(Grid, {\n      templateColumns: \"repeat(25, 4%)\",\n      templateRows: \"repeat(25, 4%)\",\n      bgPosition: \"center\",\n      bgSize: \"cover\",\n      bgRepeat: \"no-repeat\",\n      h: \"100vh\",\n      w: \"100vw\",\n      bg: \"yellow.50\",\n      onKeyDown: handleKeyPress,\n      tabIndex: -1,\n      children: [/*#__PURE__*/_jsx(GridItem, {\n        rowStart: 1,\n        colStart: 1,\n        children: /*#__PURE__*/_jsx(Button, {\n          w: \"10%\",\n          onClick: props.onClickHandler,\n          children: \"<<\"\n        })\n      }), onCombat && /*#__PURE__*/_jsx(GridItem, {\n        rowStart: 3,\n        colStart: 1,\n        rowSpan: 5,\n        colSpan: 3,\n        children: /*#__PURE__*/_jsx(Profile, {\n          user: gInterface.getProfile(agentCombat)\n        })\n      }), /*#__PURE__*/_jsx(GridItem, {\n        rowStart: 9,\n        colStart: 1,\n        rowSpan: 7,\n        colSpan: 6,\n        children: /*#__PURE__*/_jsx(LogOutput, {\n          maxH: \"27.5vh\",\n          summary: detailedCombats\n        })\n      }), /*#__PURE__*/_jsx(GridItem, {\n        rowStart: 16,\n        colStart: 1,\n        rowSpan: 5,\n        colSpan: 3,\n        children: /*#__PURE__*/_jsx(Profile, {\n          user: playerProfile\n        })\n      }), /*#__PURE__*/_jsx(GridItem, {\n        rowStart: 20,\n        colStart: 3,\n        rowSpan: 8,\n        colSpan: 2,\n        children: /*#__PURE__*/_jsx(Management, {\n          user: playerProfile,\n          levelUp: levelUp,\n          boardUp: boardUp\n        })\n      }), /*#__PURE__*/_jsx(GridItem, {\n        rowStart: 18,\n        colStart: 5,\n        rowSpan: 8,\n        colSpan: 4,\n        mb: 2,\n        children: /*#__PURE__*/_jsx(Market, {\n          buyCard: buy,\n          rerollCard: reroll,\n          marketCard: marketCard\n        })\n      }), /*#__PURE__*/_jsx(GridItem, {\n        rowStart: 2,\n        colStart: 8,\n        rowSpan: 16,\n        colSpan: 18,\n        bgColor: \"blackAlpha.300\",\n        children: /*#__PURE__*/_jsxs(Flex, {\n          h: \"100%\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-end \",\n          children: [onCombat && /*#__PURE__*/_jsx(Flex, {\n            h: \"50%\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsx(Board, {\n              cards: gInterface.getBoard(agentCombat),\n              interactable: false\n            })\n          }), /*#__PURE__*/_jsx(Flex, {\n            h: \"50%\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsx(Board, {\n              cards: playerBoard,\n              interactable: true,\n              sellCard: sellCard,\n              swapCard: swapCard\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(GridItem, {\n        rowStart: 18,\n        colStart: 10,\n        rowSpan: 8,\n        colSpan: 14,\n        children: /*#__PURE__*/_jsx(Bench, {\n          cards: playerBench,\n          interactable: true,\n          sellCard: sellCard,\n          swapCard: swapCard\n        })\n      })]\n    })\n  });\n};\n\nexport default GamingBoard;","map":null,"metadata":{},"sourceType":"module"}