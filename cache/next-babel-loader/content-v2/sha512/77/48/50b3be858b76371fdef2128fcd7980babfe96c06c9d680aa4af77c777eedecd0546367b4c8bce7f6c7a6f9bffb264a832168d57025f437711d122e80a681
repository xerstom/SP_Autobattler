{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport generateAgents from \"../factory/AgentFactory.js\";\nimport Manager from \"../Manager.js\";\nimport { COLORS, CONFIG } from \"../utils/constants.js\";\n\nvar AgentManager = /*#__PURE__*/function (_Manager) {\n  _inherits(AgentManager, _Manager);\n\n  var _super = _createSuper(AgentManager);\n\n  function AgentManager(gameManager) {\n    var _this;\n\n    _classCallCheck(this, AgentManager);\n\n    _this = _super.call(this, gameManager);\n    _this.agents = generateAgents(CONFIG.AGENTS, COLORS);\n    return _this;\n  }\n\n  _createClass(AgentManager, [{\n    key: \"init\",\n    value: function init() {//\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.agents;\n    }\n  }, {\n    key: \"getSorted\",\n    value: function getSorted() {\n      return _toConsumableArray(this.agents).sort(function (a, b) {\n        return b.life - a.life;\n      });\n    }\n  }, {\n    key: \"getPrior\",\n    value: function getPrior(agent) {\n      var sorted = this.getSorted();\n      var index = sorted.findIndex(function (a) {\n        return a.name === agent.name;\n      });\n      return sorted.slice(0, index);\n    }\n  }, {\n    key: \"getLater\",\n    value: function getLater(agent) {\n      var sorted = this.getSorted();\n      var index = sorted.findIndex(function (a) {\n        return a.name === agent.name;\n      });\n      return sorted.slice(index, sorted.length);\n    }\n  }, {\n    key: \"getPlayer\",\n    value: function getPlayer() {\n      return this.agents[0];\n    }\n  }, {\n    key: \"getBots\",\n    value: function getBots() {\n      return this.agents.slice(1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(predicate) {\n      return this.agents.find(predicate);\n    }\n  }, {\n    key: \"getByName\",\n    value: function getByName(name) {\n      return this.agents.find(function (a) {\n        return a.name === name;\n      });\n    }\n  }, {\n    key: \"boardUp\",\n    value: function boardUp(agent) {\n      if (!agent.isBoardSizeMax() && agent.hasEnoughMoney(agent.boardUpPrice)) {\n        agent.decreaseMoney(agent.boardUpPrice);\n        agent.upBoard();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"levelUp\",\n    value: function levelUp(agent) {\n      if (!agent.isLevelMax() && agent.hasEnoughMoney(agent.levelUpPrice)) {\n        agent.decreaseMoney(agent.levelUpPrice);\n        agent.upLevel();\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"buy\",\n    value: function buy(agent, action) {\n      return this[action](agent);\n    }\n  }, {\n    key: \"increaseMoneyForAllAgents\",\n    value: function increaseMoneyForAllAgents(moneyToAdd) {\n      this.agents.forEach(function (a) {\n        return a.increaseMoney(moneyToAdd);\n      });\n    }\n  }]);\n\n  return AgentManager;\n}(Manager);\n\nexport default AgentManager;","map":null,"metadata":{},"sourceType":"module"}